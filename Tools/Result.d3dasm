//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   int SampleCount;                   // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// BaseSampler                       sampler      NA          NA             s0      1 
// BaseTexture                       texture  float4          2d             t0      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps_siv linear noperspective v0.xy, position
      dcl_output o0.xyzw
      dcl_temps 3
   0: mov r0.xyzw, l(0,0,0,0)
   1: mov r1.x, l(0)
   2: loop 
   3:   ige r1.y, r1.x, cb0[0].x
   4:   breakc_nz r1.y
   5:   itof r1.y, r1.x
   6:   add r1.y, r1.y, l(1.000000)
   7:   div r1.yz, v0.xxyx, r1.yyyy
   8:   sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.yzyy, t0.xyzw, s0
   9:   add r0.xyzw, r0.xyzw, r2.xyzw
  10:   iadd r1.x, r1.x, l(1)
  11: endloop 
  12: mov o0.xyzw, r0.xyzw
  13: ret 
// Approximately 14 instruction slots used
